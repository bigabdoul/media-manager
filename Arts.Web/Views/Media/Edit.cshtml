@model MediaFile

@{
    ViewData["Title"] = "Edit Media";
}

<div class="page-header blank"></div>
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" method="post">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h2>@ViewBag.Title</h2>
                </div>
                <div class="panel-body">
                    <h4>Media Properties</h4>
                    <small>Location: @Model.MediaUrl</small><br />
                    <small>@Html.DisplayNameFor(model => model.HashCode) (SHA256): @Html.DisplayFor(model => model.HashCode)</small>
                    <hr />
                    @if (Model.HasMedia)
                    {
                        if (Model.IsImage)
                        {
                            <img src="@Model.MediaUrl" alt="@Model.FileName" class="img-responsive pull-left" width="80" />
                        }
                        else if (Model.HasMedia && Model.IsAudio)
                        {
                            <a target="_blank" href="@Model.MediaUrl" class="btn btn-success btn-xs pull-left">
                                <span class="glyphicon glyphicon-play"></span>&nbsp; Play
                            </a>
                        }
                        else if (Model.IsVideo)
                        {
                            <i class="glyphicon glyphicon-facetime-video btn-lg pull-left" aria-hidden="true"></i>
                        }
                    }
                    <dl class="dl-horizontal pull-left">
                        <dt>
                            @Html.DisplayNameFor(model => model.ContentType)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.ContentType)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Length)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.LengthDisplay) (@Model.Length.ToString("N") Bytes)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.DateCreated)
                        </dt>
                        <dd>
                            @Model.DateCreated.ToString("dd-MM-yyyy @ HH:mm")
                        </dd>
                    </dl>
                    <div class="form-group">
                        <div class="clearfix"></div>
                    </div>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group">
                        <label asp-for="FileName" class="control-label"></label>
                        <input asp-for="FileName" class="form-control" />
                        <span asp-validation-for="FileName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="MediaUrl" class="control-label"></label>
                        <input asp-for="MediaUrl" class="form-control" />
                        <span asp-validation-for="MediaUrl" class="text-danger"></span>
                    </div>
                </div>
                <div class="panel-footer">
                    <a asp-action="Index" class="btn btn-default"><i class="fa fa-arrow-left"></i> Back to List</a>
                    <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Save</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
